from os import listdir
from os.path import isfile
from os.path import abspath
from os.path import dirname
from os.path import sep
from os.path import basename
from prompt_toolkit.completion import WordCompleter
from prompt_toolkit.styles import Style
from prompt_toolkit import prompt
from inspect import getmembers
from inspect import isclass
from imp import load_source
from .base import Exploit
from sys import exit

class cli:
    _menu_ = {
        "help": "show this help menu",
        "show": "get all available exploits",
        "select": "select an exploit by number",
        "cls": "clear screen",
        "back": "go back to previous menu",
        "exit": "exit program"
    }
    def __init__(self):
        self.exploits_path = dirname(abspath(__file__))
        self.exploits = [f.rstrip(".py")
                    for i, f in enumerate(listdir(self.exploits_path))
                    if isfile(f"{self.exploits_path}{sep}{f}")
                    and f not in (basename(__file__), "base.py")]
        self.exploits = {i: f for i, f in enumerate(self.exploits)}
        self.style = Style.from_dict({
            "prompt": "#ff0000"
        })

    def show(self):
        print("Exploits:")
        for index, exploit in self.exploits.items():
            print(f"\t[{index}] {exploit}")

    def select(self, num: int):
        mod = __import__(f"modules.exploits.{self.exploits[num]}", fromlist=["exp"])
        exploit_class = [c for (_,c) in getmembers(mod, isclass)
                        if issubclass(c, Exploit) & (c is not Exploit)][0]
        return self.exploit_prompt(exploit_class())

    def exploit_prompt(self, cls):
        cls.options["info"] = "get information regarding the current exploit"
        cls.options["set"] = "set an option for the exploit"
        cls.options["unset"] = "unset an option for the exploit"
        cls.options["run"] = "run the exploit"
        cls.options["back"] = "return to exploits menu"
        cls.options["exit"] = "exit program"

        exploit_menu = WordCompleter(cls.options.keys(), ignore_case=True)
        message = [("class:prompt", cls.prompt)]
        while True:
            try:
                selected = prompt(
                    message,
                    style=self.style,
                    completer=exploit_menu,
                    complete_while_typing=False
                ).strip()
            except KeyboardInterrupt:
                continue
            except EOFError:
                print("❌❌❌ Goodbye ❌❌❌")
                exit(1)

            if selected == "info":
                for k, v in cls.info:
                    print(k, "\t\t", v)
            elif selected == "back":
                return exit
            elif select == "exit":
                print("❌❌❌ Goodbye ❌❌❌")
                exit(0)

    def help(self):
        print("Menu:")
        for option, description in self._menu_.items():
            print(f"\t{option}\t\t{description}")

    def init(self):
        menu_words = WordCompleter(self._menu_.keys(), ignore_case=True)
        message = [("class:prompt", "〔exploits〕❯ ")]
        while True:
            try:
                selected = prompt(
                    message,
                    style=self.style,
                    completer=menu_words,
                    complete_while_typing=False
                ).strip()
            except KeyboardInterrupt:
                continue
            except EOFError:
                print("❌❌❌ Goodbye ❌❌❌")
                exit(1)

            if selected == "show":
                self.show()
            elif "select" in selected:
                try:
                    n = int(selected.split()[-1])
                except ValueError:
                    print("[X] Select module by integer value")
                    continue
                self.select(n)
            elif selected == "help":
                self.help()
            elif selected == "cls":
                print("\n"*75)
            elif selected in ("back"):
                break
            elif selected == "exit":
                print("❌❌❌ Goodbye ❌❌❌")
                exit(0)
